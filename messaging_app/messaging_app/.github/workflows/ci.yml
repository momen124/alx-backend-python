name: Django CI

on:
  push:
    paths:
      - 'messaging_app/**'
      - 'chats/**'
  pull_request:
    paths:
      - 'messaging_app/**'
      - 'chats/**'

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_pass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      DB_NAME: test_db
      DB_USER: test_user
      DB_PASSWORD: test_pass
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DJANGO_SETTINGS_MODULE: messaging_app.settings
      PYTHONUNBUFFERED: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip3 install -r messaging_app/requirements.txt || pip3 install -r messaging_app/Requirements.txt
          pip3 install pytest pytest-django mysqlclient pytest-cov flake8

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL..."
          for i in {1..20}; do
            if mysqladmin ping -h 127.0.0.1 -u test_user -ptest_pass --silent; then
              echo "MySQL is up!"
              break
            fi
            sleep 3
          done

      - name: Run flake8 linting
        run: |
          echo "Running flake8..."
          flake8 chats messaging_app --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 chats messaging_app --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
        continue-on-error: false

      - name: Run Django tests with coverage
        run: |
          python manage.py migrate
          pytest chats/tests.py --ds=messaging_app.settings --cov=chats --cov-report=xml --junitxml=report.xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml

      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: junit-test-report
          path: report.xml
